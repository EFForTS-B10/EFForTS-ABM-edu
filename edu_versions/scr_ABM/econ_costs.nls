
;###################################################################################  
; RECURRENT COSTS
;###################################################################################
  
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report calculate_recurrent_costs_cell [landuse pp-management labor capitalstock tinput]
  ;reports recurrent costs from one cell in one year based on costs for labor capitalstock tinput and land
  
  let recurrent-costs 0
  let wage item pp-management [l_mng_wages] of a-lut landuse
  let price-tinput item pp-management [l_mng_price_tinput] of a-lut landuse
  
  let labor-costs wage * labor
  let capital-costs rent_rate_capital_borrow * capitalstock
  let tinput-costs price-tinput * tinput
  let land-costs rent_rate_land * patch_size * land_price
 
  set recurrent-costs labor-costs + capital-costs + tinput-costs + land-costs
    
  report recurrent-costs
End 

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report calculate_costs_variable_factors_cell [landuse pp-management labor tinput]
  ;reports recurrent costs from one cell in one year based on costs for labor and tinput (the costs for land and capital are substracted earlier)
 
  let variable-factor-costs 0
  let wage item pp-management [l_mng_wages] of a-lut landuse
  let price-tinput item pp-management [l_mng_price_tinput] of a-lut landuse
  
  let labor-costs wage * labor
  let tinput-costs price-tinput * tinput
  
  set variable-factor-costs labor-costs + tinput-costs
    
  report variable-factor-costs
End 
  
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
To-report calculate-household-capital-costs [option-matrix]
  ;reports capital costs [$] for the whole household
  ;unavoidable costs for capital  
  
  ;calculate household capital stock  
  let capital-stocks-cell  matrix:from-row-list (list matrix:get-row option-matrix 4) ;capital stock
  let patch-sizes matrix:from-row-list (list matrix:get-row option-matrix 3) ;patch size   
  
  let capital-stock-patches matrix:times-element-wise capital-stocks-cell patch-sizes
  let household-capital-stock sum(matrix:get-row capital-stock-patches 0)
      
  let unavoidable-capital-costs rent_rate_capital_borrow * household-capital-stock 
  
  report unavoidable-capital-costs 
End  
 
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report calculate-household-land-costs
  ;reports costs for land rent [$] for the whole household area
  ;unavoidable costs for land  
  let household-size h_area * patch_size
  let unavoidable-land-costs rent_rate_land * household-size * land_price 
  
  report unavoidable-land-costs
End  

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report calculate-unavoidable-costs-household [option-matrix]
  ;reports unavoidable costs [$] for one household in one year. Unavoidable costs are: investment, capital and land costs
  let investment-costs-this-year investment-costs-of-one-option option-matrix 
  let land-costs calculate-household-land-costs
  let capital-costs calculate-household-capital-costs option-matrix  
  let unavoidable-costs investment-costs-this-year + land-costs + capital-costs
  
  report unavoidable-costs
End    

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report substract-unavoidable-costs-household [wealth debts unavoidable-costs]
  ;substracts the unavoidable costs from wealth: investment, land and capital costs
  ;takes up new debts if necessary
  ;reports new wealth and debts of the household
  
  ifelse wealth - unavoidable-costs >= min-wealth 
  [   
    set wealth wealth - unavoidable-costs
  ]
  [
    set debts debts + (unavoidable-costs - (wealth - min-wealth))
    set wealth min-wealth 
  ]
 
  report (list wealth debts)
End

;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To-report calculate-variable-factor-costs-household [option-matrix inputs]
  ;reports costs for the variable factors labor and tinput [$] for one household and one option and given factor inputs 
  ;option matrix is a matrix with rows: field-ids, landuse, age, size, capital stock
  ;inputs is a matrix with first rows: field-ids, labor inputs, tinput  
 
  let variable-factor-costs-household 0
  
  let number-of-fields item 1 matrix:dimensions option-matrix
  let field 0
  while [field < number-of-fields]
  [
    let landuse matrix:get option-matrix 1 field
    let pp-management item landuse h_management  ;; <2.0>MANAGE
    let age matrix:get option-matrix 2 field 
    let labor matrix:get inputs 1 field
    let tinput matrix:get inputs 2 field
    let capitalstock matrix:get option-matrix 4 field 
    let variable-factor-costs-cell calculate_costs_variable_factors_cell landuse pp-management labor tinput
    let field-size matrix:get option-matrix 3 field
    let variable-factor-costs-field variable-factor-costs-cell * field-size
    set variable-factor-costs-household variable-factor-costs-household + variable-factor-costs-field ;
    set field field + 1 
  ]
 
  report variable-factor-costs-household
  
End


